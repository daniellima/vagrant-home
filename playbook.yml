---

- name: Basic package install and checks
  hosts: all
  tasks:
    - name: verify internet connectivity
      wait_for:
        host: www.google.com
        port: 443
        timeout: 3

    - name: install packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - epel-release
        - python36
        - python
        - python-pip
        - python-devel # Some python packages require it, because they are build locally
        - unzip
        - docker
        - nodejs
        - npm
        - htop
        - psmisc
        - https://packages.microsoft.com/config/rhel/7/packages-microsoft-prod.rpm
        - dotnet-sdk-2.1
        - nc
        - java-1.8.0-openjdk
        - lsof
        - traceroute
        - bind-utils
        - telnet
        - man-pages 
        - man-db 
        - man

- name: Setup IUS repo
  hosts: all
  tasks:
    - name: Adds IUS repository
      package:
        name: 
          - https://centos7.iuscommunity.org/ius-release.rpm
        state: present

- name: Install Git
  hosts: all
  tasks:
    - name: Get git package from IUS
      package:
        name: 
          - git2u-all
        state: present
    - name: Remove the use of less as pager
      shell: git config --global core.pager cat

- name: Install Tmux package from IUS
  hosts: all
  tasks:
    - package:
        name: 
          - tmux2u
        state: present

- name: Install and configure ZSH
  hosts: all
  tasks:
    - package:
        name: 
          - zsh
        state: present
    - name: Change default shell to be ZSH
      user:
        name: vagrant
        shell: /bin/zsh
    - name: Download oh-my-zsh
      get_url:
        url: https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
        dest: "/home/vagrant/install_oh_my_zsh.sh"
        mode: u+x
        owner: vagrant
        group: vagrant
    - name: Install Oh My ZSH
      become_user: vagrant
      shell: 
        cmd: /home/vagrant/install_oh_my_zsh.sh
        creates: /home/vagrant/.oh-my-zsh
    - name: Copy .zshrc
      copy:
        src: user_zsh_conf.sh
        dest: /home/vagrant/user_zsh_conf.sh
        mode: 0644
        owner: vagrant
        group: vagrant
    - name: add my custom configurations to ZSH
      lineinfile:
        path: /home/vagrant/.zshrc
        line: "source /home/vagrant/user_zsh_conf.sh"
    - name: Configure theme
      lineinfile:
        path: /home/vagrant/.zshrc
        regexp: '^ZSH_THEME='
        line: 'ZSH_THEME="robbyrussell"'

- name: Bring ssh configuration and keys from the host to the guest and do further configuration
  hosts: all
  tasks:
    - name: copy key files to the guest
      copy:
        remote_src: yes
        src: /ssh/{{ item }}
        dest: /home/vagrant/.ssh/{{ item }}
        mode: 0700
        owner: vagrant
        group: vagrant
      loop:
        - id_rsa
        - id_rsa.pub
        - config
    - name: copy ssh-agent startup script to home folder
      copy:
        src: start_ssh-agent.sh
        dest: /home/vagrant/start_ssh-agent.sh
        mode: 0644
        owner: vagrant
        group: vagrant
    - name: add ssh-agent startup script to .zshrc
      lineinfile:
        path: /home/vagrant/.zshrc
        line: "source /home/vagrant/start_ssh-agent.sh"
    - name: configure ssh to add key if not available
      lineinfile:
        path: /home/vagrant/.ssh/config
        line: "AddKeysToAgent  yes"

- name: Configure usefull shell alias
  hosts: all
  tasks:
    - name: Add git alias script
      copy:
        src: git_alias.sh
        dest: /home/vagrant/git_alias.sh
        mode: 0664
        owner: vagrant
        group: vagrant
    - name: Add git alias script to .zshrc
      lineinfile:
        path: /home/vagrant/.zshrc
        line: "source /home/vagrant/git_alias.sh"

- name: Configure python3 on CentOS
  hosts: all
  tasks:
    - name: install pip for python 3.6
      command: "python36 -m ensurepip"

    - name: add aliases for python3
      lineinfile:
        path: /home/vagrant/.zshrc
        line: "{{ item }}"
      loop:
        - alias pip3='python36 -m pip'
        - alias python3='python36'

    - name: install pipenv
      command: 'python36 -m pip install pipenv'

- name: Install Terraform
  hosts: all
  vars:
    terraform_temp_zip_path: /tmp/terraform.zip
  tasks:
    - name: fetch Terraform
      get_url:
        url: https://releases.hashicorp.com/terraform/0.11.11/terraform_0.11.11_linux_amd64.zip
        dest: "{{ terraform_temp_zip_path }}"
    - name: Unzip terraform binary
      unarchive:
        src: "{{ terraform_temp_zip_path }}"
        dest: /usr/local/bin
        remote_src: yes

- name: Configure docker
  hosts: all
  tasks:
    - name: add docker group
      group:
        name: docker
    - name: Add vagrant to docker group # this allow calling docker wihout sudo
      user:
        name: vagrant
        groups: docker
        append: yes
    - name: Get docker daemon.json file
      set_fact:
        docker_config: "{{ lookup('file', '/etc/docker/daemon.json')|from_json }}"
    - name: Set new bip to docker config
      set_fact:
        docker_config: "{{ docker_config|combine({'bip': '192.168.1.5/24'}) }}"
    - name: Dump new configuration
      copy:
        content: "{{ docker_config | to_nice_json }}"
        dest: /etc/docker/daemon.json
    - name: Enable docker on systemd
      service:
        name: docker
        state: restarted
        enabled: true

- name: Install Tsuru client for 1.4
  hosts: all
  vars:
    tsuru_temp_zip_path: /tmp/tsuruclient.zip
  tasks:
    - name: fetch Tsuru client
      get_url:
        url: https://github.com/tsuru/tsuru-client/releases/download/1.4.0/tsuru_1.4.0_linux_amd64.tar.gz
        dest: "{{ tsuru_temp_zip_path }}"
    - name: Unzip tsuru client binary
      unarchive:
        src: "{{ tsuru_temp_zip_path }}"
        dest: /usr/local/bin
        remote_src: yes

- name: Install OpenShift client for 3.11
  hosts: all
  vars:
    openshift_temp_zip_path: /tmp/openshiftclient.tar.gz
  tasks:
    - name: fetch OpenShift client
      get_url:
        url: https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
        dest: "{{ openshift_temp_zip_path }}"
    - name: Unzip OpenShift client binary
      unarchive:
        src: "{{ openshift_temp_zip_path }}"
        dest: "/tmp"
        remote_src: yes
    - name: Copy binaries to PATH
      copy:
        src: "/tmp/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit/oc"
        dest: /usr/local/bin
        remote_src: yes
        mode: o+x

- name: Install kubectl
  hosts: all
  tasks:
    - name: Download kubectl
      get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/v1.13.0/bin/linux/amd64/kubectl
        dest: /usr/local/bin
    - name: Make kubectl executable
      file:
        path: /usr/local/bin/kubectl
        mode: 0755

- name: Install The BFG  # a repo cleaning tool
  hosts: all
  tasks:
    - name: fetch The BFG .jar
      get_url:
        url: https://repo1.maven.org/maven2/com/madgag/bfg/1.13.0/bfg-1.13.0.jar
        dest: /usr/local/bin
    - name: add alias to execute bfg easier
      lineinfile:
        path: /home/vagrant/.zshrc
        line: "alias bfg='java -jar /usr/local/bin/bfg-1.13.0.jar'"

- name: Install Google Cloud SDK
  hosts: all
  tasks:
    - name: Install SDK repository
      yum_repository:
        name: google-cloud-sdk
        description: Google Cloud SDK
        baseurl: https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64
        enabled: yes
        gpgcheck: yes
        repo_gpgcheck: yes
        # The indentation is important, as described by https://cloud.google.com/sdk/docs/quickstart-redhat-centos
        gpgkey: |
          https://packages.cloud.google.com/yum/doc/yum-key.gpg
           https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        file: google-cloud-sdk
    - name: Install Google Cloud SDK
      package:
        name: google-cloud-sdk
        state: present


- name: Install Azure CLI
  hosts: all
  tasks:
    - name: Import Microsoft Repository Key
      rpm_key:
        key: https://packages.microsoft.com/keys/microsoft.asc
        state: present
    - name: Install Azure CLI repository
      yum_repository:
        name: azure-cli
        description: Azure CLI
        baseurl: https://packages.microsoft.com/yumrepos/azure-cli
        enabled: yes
        gpgcheck: yes
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
        file: azure-cli
    - name: Install Azure CLI
      package:
        name: azure-cli
        state: present